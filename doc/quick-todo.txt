================================================================================
INTRODUCTION                                                            *quick-todo*

Quick Todo lets you quickly jot down and track project-scoped todos;
with minimal disruption to your flow.

This plugin addresses a recurring annoyance in my workflow.
When I am in the middle of a change (especially in a flow state), writing down a
random idea or necessary todo can be annoying and often disruptive.

Quick Todo is simple, just press a key to toggle a project-scoped todo list in
markdown. Quickly jot down the task (and any notes), press the same key to close
and move on.

The todo files are currently saved in the quick-todo plugin folder under
`stdpath("data")`(run `echo stdpath("data")` to see what that maps to).
Each todo file is saved in a sub folder based on the current working directory of
each project.

Table of contents:

1. REQUIREMENTS: Plugin dependencies and setup.            |quick-todo-requirements|
2. INSTALLATION: How to install the plugin.                |quick-todo-installation|
3. CONFIGURATION: Available options and their defaults.          |quick-todo-config|
4. COMMANDS: Commands provided by the plugin.                  |quick-todo-commands|
5. FUNCTIONS: Lua functions exposed by the plugin.            |quick-todo-functions|

================================================================================
REQUIREMENTS                                               *quick-todo-requirements*

Before using quick-todo.nvim, ensure you have the following:

- Neovim (>= 0.10)

================================================================================
INSTALLATION                                               *quick-todo-installation*

It's recommended to use a plugin manager like lazy.nvim to install quick-todo.nvim:
>lua
    {
      "SyedAsimShah1/quick-todo.nvim",
      config = function()
        require("quick-todo").setup()
      end
    }

================================================================================
CONFIGURATION                                                    *quick-todo-config*

quick-todo.setup({opts}) ~

The `quick-todo.setup()` function sets up the plugin with user-provided options.
Here are the available options:

>lua
  {
    keys = {
      open = "<leader>T", -- They key to toggle the todo window
    },
    window = { -- Options to control the looks for the todo window
      height = 0.5,
      width = 0.5,
      winblend = 0,
      border = "rounded",
    },
  }
<

================================================================================
COMMANDS                                                       *quick-todo-commands*

quick-todo.nvim provides the following command:

:QuickTodo [subcommand] ~
  Execute a quick-todo.nvim subcommand. Available subcommands:
  - `open`: toggle the todo window

  If no subcommand is provided or an invalid subcommand is used, an error
  message will be displayed.

================================================================================
FUNCTIONS                                                     *quick-todo-functions*

quick-todo.nvim exposes the following Lua functions:

                                                                *quick-todo.setup()*
quick-todo.setup({opts}) ~
  Set up the plugin with the given options. See |quick-todo-config| for available
  options.

                                                                *quick-todo.open_todo()*
quick-todo.open_todo() ~
  Toggle the todo window. Once a window is open, you can also close the window
  using "q" or "ctrl-c".


================================================================================
vim:tw=78:ts=8:et:ft=help:norl:
